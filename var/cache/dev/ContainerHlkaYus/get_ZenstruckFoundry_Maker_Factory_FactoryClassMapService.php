<?php

namespace ContainerHlkaYus;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ZenstruckFoundry_Maker_Factory_FactoryClassMapService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.zenstruck_foundry.maker.factory.factory_class_map' shared service.
     *
     * @return \Zenstruck\Foundry\Bundle\Maker\Factory\FactoryClassMap
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/zenstruck/foundry/src/Bundle/Maker/Factory/FactoryClassMap.php';

        return $container->privates['.zenstruck_foundry.maker.factory.factory_class_map'] = new \Zenstruck\Foundry\Bundle\Maker\Factory\FactoryClassMap(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Factory\\EnseignantFactory'] ?? ($container->privates['App\\Factory\\EnseignantFactory'] = new \App\Factory\EnseignantFactory()));
            yield 1 => ($container->privates['App\\Factory\\EtudiantFactory'] ?? ($container->privates['App\\Factory\\EtudiantFactory'] = new \App\Factory\EtudiantFactory()));
            yield 2 => ($container->privates['App\\Factory\\FiliereFactory'] ?? ($container->privates['App\\Factory\\FiliereFactory'] = new \App\Factory\FiliereFactory()));
            yield 3 => ($container->privates['App\\Factory\\ModuleFactory'] ?? ($container->privates['App\\Factory\\ModuleFactory'] = new \App\Factory\ModuleFactory()));
            yield 4 => ($container->privates['App\\Factory\\NoteFactory'] ?? ($container->privates['App\\Factory\\NoteFactory'] = new \App\Factory\NoteFactory()));
            yield 5 => ($container->privates['App\\Factory\\SemestreFactory'] ?? ($container->privates['App\\Factory\\SemestreFactory'] = new \App\Factory\SemestreFactory()));
            yield 6 => ($container->privates['App\\Factory\\UserFactory'] ?? ($container->privates['App\\Factory\\UserFactory'] = new \App\Factory\UserFactory()));
        }, 7));
    }
}
